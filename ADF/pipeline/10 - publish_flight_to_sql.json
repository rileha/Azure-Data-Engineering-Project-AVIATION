{
	"name": "10 - publish_flight_to_sql",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "select_table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "[1, 2, 3, 4]",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1_copy1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureDatabricksDeltaLakeSource",
									"query": {
										"value": "@concat(\n    'SELECT * FROM mart_gcdev.fact_flight WHERE ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) BETWEEN ',\n    if(equals(item(), 1), pipeline().parameters.start_row1, \n    if(equals(item(), 2), pipeline().parameters.start_row2, \n    if(equals(item(), 3), pipeline().parameters.start_row3, \n    pipeline().parameters.start_row4))),\n    ' AND ',\n    if(equals(item(), 1), pipeline().parameters.end_row1, \n    if(equals(item(), 2), pipeline().parameters.end_row2, \n    if(equals(item(), 3), pipeline().parameters.end_row3, \n    pipeline().parameters.end_row4)))\n)",
										"type": "Expression"
									},
									"exportSettings": {
										"type": "AzureDatabricksDeltaLakeExportCommand"
									}
								},
								"sink": {
									"type": "SqlDWSink",
									"allowCopyCommand": true,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "gcdevdevadls_sink_link",
										"type": "LinkedServiceReference"
									},
									"path": "manualfile",
									"enableCompression": true
								},
								"parallelCopies": 8,
								"dataIntegrationUnits": 8
							},
							"inputs": [
								{
									"referenceName": "DatabricksDeltaLakeSource",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@item().source_table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "asasqldw_sink",
									"type": "DatasetReference",
									"parameters": {
										"table_name": "@item().publish_table_name"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "lookup_publish",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "json_source_info",
						"type": "DatasetReference",
						"parameters": {
							"filename": "Publish_Table.json",
							"container": "manualfile"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "select_table",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "lookup_publish",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lookup_publish').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().source_table_name, pipeline().parameters.table_to_rerun)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"table_to_rerun": {
				"type": "string",
				"defaultValue": "fact_flight"
			},
			"start_row1": {
				"type": "int",
				"defaultValue": 1
			},
			"end_row1": {
				"type": "int",
				"defaultValue": 6031238
			},
			"start_row2": {
				"type": "int",
				"defaultValue": 6031238
			},
			"end_row2": {
				"type": "int",
				"defaultValue": 12062477
			},
			"start_row3": {
				"type": "int",
				"defaultValue": 12062477
			},
			"end_row3": {
				"type": "int",
				"defaultValue": 18093714
			},
			"start_row4": {
				"type": "int",
				"defaultValue": 18093714
			},
			"end_row4": {
				"type": "int",
				"defaultValue": 24124951
			}
		},
		"annotations": []
	}
}